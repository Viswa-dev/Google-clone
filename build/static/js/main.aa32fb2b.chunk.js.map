{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa32fb2b.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\r\n    term: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n};\r\n\r\nconst reducer =(state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                term: action.term,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React, { useState } from 'react'\r\nimport './search.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Search({ hideButtons = false }) {\r\n  \r\n  const [{}, dispatch] = useStateValue();\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const search = e => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"hi\", input)\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_SEARCH_TERM,\r\n      term: input\r\n    })\r\n\r\n    history.push('/search')\r\n  };\r\n  \r\n  return (\r\n        <form className=\"search\">\r\n                <div className=\"search_input\">\r\n                  <SearchIcon className=\"search_inputIcon\" />\r\n                  <input value={input} onChange={e => setInput(e.target.value)}/>\r\n                  <MicIcon />\r\n                </div>\r\n                \r\n                 {!hideButtons ? (\r\n                   <div className=\"search_buttons\">\r\n                   <Button type='submit' onClick={search} variant=\"outlined\">Google Search</Button>\r\n                   <Button variant=\"outlined\">I'm Feeling lucky</Button>\r\n                 </div>\r\n                 ): (\r\n                  <div className=\"search_buttons\">\r\n                  <Button className=\"search_buttonsHidden\" type='submit' onClick={search} variant=\"outlined\">Google Search</Button>\r\n                  <Button className=\"search_buttonsHidden\" variant=\"outlined\">I'm Feeling lucky</Button>\r\n                </div>\r\n                 )}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport styles from './Home.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Search from './Search'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home_header\">\r\n                <div className=\"home_headerLeft\">\r\n                    <Link to='/about'>About</Link>\r\n                    <Link to='/store'>Store</Link>\r\n                    \r\n                </div>\r\n                <div className=\"home_headerRight\">\r\n                <Link to='/gmail'>Gmail</Link>\r\n                    <Link to='/images'>Images</Link>\r\n                    <AppsIcon />\r\n                    <Avatar />\r\n                    \r\n                    {/*Icon*/}\r\n                    {/*Avatar   */}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"home_body\">\r\n                <img src=\"https://images-eu.ssl-images-amazon.com/images/I/41HeL2cy9LL.png\" alt=\"\"></img>\r\n                <div className=\"home_inputContainer\">\r\n                  <Search />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useState, useEffect } from 'react'\r\nimport API_KEY from \"./keys\";\r\n\r\nconst CONTEXT_KEY = \"2867d3205de1bd894\"\r\n\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async() => {\r\n          fetch(\r\n              `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n          )\r\n          .then(response => response.json())\r\n          .then(result => {\r\n              setData(result)\r\n          })\r\n      }\r\n\r\n      fetchData(); \r\n    }, [term])\r\n\r\n    return { data }\r\n};\r\n\r\nexport default useGoogleSearch;\r\n","export const API_KEY = \"AIzaSyBn12TXIqFeVs5s9B0yOPak8A5Y8v9R9Ng\";\r\n\r\nexport default API_KEY","import React from 'react'\r\nimport './searchpage.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport useGoogleSearch from './useGoogleSearch';\r\nimport Response from \"./response\";\r\nimport { Link } from 'react-router-dom';\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImagesIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nfunction SearchPage() {\r\n    const [{ term }, dispatch] = useStateValue();\r\n\r\n    const { data } = useGoogleSearch(term);\r\n\r\n    //MOck API\r\n   // const data = Response;\r\n    \r\n    console.log( data );\r\n\r\n    return (\r\n        <div className=\"searchPage\">\r\n            <div className=\"searchPage_header\">\r\n              <Link to=\"/\">\r\n                  <img className=\"searchPage_logo\" src=\"https://www.edigitalagency.com.au/wp-content/uploads/google-logo-png-transparent-background-large-new.png\" alt=\"\" />\r\n\r\n              </Link>\r\n              <div className=\"searchPage_headerBody\">\r\n\r\n                  <Search hideButtons />\r\n                  <div className=\"searchPage_options\">\r\n\r\n                      <div className=\"searchPage_optionsLeft\">\r\n\r\n                          <div className=\"searchPage_option\">\r\n\r\n                              <SearchIcon />\r\n                              <Link to=\"/all\">All</Link>\r\n\r\n                          </div>\r\n                          <div className=\"searchPage_option\">\r\n\r\n                              <DescriptionIcon />\r\n                              <Link to=\"/news\">News</Link>\r\n\r\n                          </div>\r\n                          <div className=\"searchPage_option\">\r\n\r\n                              <ImagesIcon />\r\n                              <Link to=\"/images\">Images</Link>\r\n\r\n                          </div>\r\n                          <div className=\"searchPage_option\">\r\n\r\n                              <LocalOfferIcon />\r\n                              <Link to=\"/shopping\">Shopping</Link>\r\n\r\n                          </div>\r\n                          <div className=\"searchPage_option\">\r\n\r\n                              <RoomIcon />\r\n                              <Link to=\"/maps\">Maps</Link>\r\n\r\n                          </div>\r\n                          <div className=\"searchPage_option\">\r\n\r\n                              <MoreVertIcon />\r\n                              <Link to=\"/all\">More</Link>\r\n\r\n                          </div>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"searchPage_optionsRight\">\r\n                          <div className=\"searchPage_option\">\r\n                              <Link to=\"/settings\">Settings</Link>\r\n                          </div>\r\n                          <div className=\"searchPage_option\">\r\n                              <Link to=\"/tools\">Tools</Link>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n              </div>\r\n            </div>\r\n            \r\n\r\n            {term && (\r\n             <div className=\"searchPage_results\">\r\n              <p className=\"searchPage_resultsCount\">\r\n                  About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime}seconds) for {term}\r\n              </p>\r\n\r\n              {data?.items.map(item =>(\r\n                  <div className=\"searchPage_results\">\r\n                      <a href={item.link}>\r\n                      {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src && (\r\n                              <img className=\"searchPage_resultImage\" src={item.pagemap?.cse_image[0]?.src}\r\n                              alt=\"\"></img>\r\n                          )}\r\n                          {item.displayLink}\r\n                      </a> \r\n                      <a className=\"searchPage_resultTitle\" href={item.link}>\r\n                         <h2>{item.title}</h2>\r\n                      </a>\r\n                      <p className=\"searchPage_resultSnippet\">\r\n                        {item.snippet}\r\n                      </p> \r\n\r\n                  </div>\r\n              ))}\r\n             </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home.js'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport SearchPage from './SearchPage';\n\nfunction App() {\n  return (\n    //BEM \n    <div className=\"App\">\n      <Router>\n      \n      <Switch>\n\n        <Route path=\"/search\">\n          <SearchPage />\n        \n        </Route>\n\n\n        <Route path=\"/\">\n\n          <Home />\n        \n        </Route>\n      \n      </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, {initialState} from \"./reducer\";\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}